let m_key,m_iv,enc;function abs_url(e){let t=document.createElement("a");return t.href=e,t.href}function progress(e,t,n){const o=t/e*100;o>=100&&(document.getElementById("filact").innerText="complete"),document.getElementById("rdf").style.display="block",document.getElementById("filact").innerText=`${n} file`,document.getElementById("progress-div").style.width=`${o}%`}async function send_file(e,t){const n=new XMLHttpRequest,o=e.iv,a=e.key,r=e.fname,c=e.ftp;function s(e,t){e.select(),document.execCommand("copy"),t&&(t.innerHTML="copied")}n.open("POST","/upload/"),n.upload.onprogress=(e=>{progress(e.total,e.loaded,"Uploading")}),n.onload=async function(){document.getElementById("filact").innerText="Complete";const e=JSON.parse(this.response),t=e.nonce,n=e.file,l=`/dl/${n}/`,i={filename:r,type:c};await fetch("/create-metadata/",{method:"post",body:JSON.stringify(i),headers:{"x-nonce":t,"content-type":"application/json"}});const d=abs_url(l),y=new URL(d),u=url_create(y.search,{iv:o});window.history.pushState({},document.title,`${y}?${u}`),document.getElementById("xrhf").style.display="block";const m=document.getElementById("file-url"),p=document.getElementById("file-url_input"),f=document.getElementById("file-url_helper"),g=document.getElementById("pass-key"),_=document.getElementById("pass-key_helper"),w=document.getElementById("pass-key_input"),B=document.getElementById("copyall"),h=document.getElementById("copy-all_input"),E=document.getElementById("copy-all_helper");document.getElementById("fname").innerHTML=n,m.innerHTML=d,p.value=d,g.innerHTML=a,w.value=a,params=url_create(window.location.search,{key:a,iv:o}),h.value=`${d}?${params}`,B.onclick=(()=>{s(h,E)}),m.onclick=(()=>{s(p,f)}),g.onclick=(()=>{s(w,_)})},n.send(t)}function processFile(e){const t=e.target.files[0],n=t.type,o=t.name,a=new FileReader;a.onprogress=(e=>{progress(e.total,e.loaded,"Reading")}),a.onload=(async e=>{const t=e.target.result,a=crypto.getRandomValues(new Uint8Array(16));m_iv=await arrayBufferToBase64(a);const r=await crypto.subtle.generateKey({name:"AES-CBC",length:256},!0,["encrypt","decrypt"]);m_key=await arrayBufferToBase64(await crypto.subtle.exportKey("raw",r)),enc=await crypto.subtle.encrypt({name:"AES-CBC",iv:a},r,t),send_file({key:m_key,iv:m_iv,fname:o,ftp:n},enc)}),a.readAsArrayBuffer(t)}function arrayBufferToBase64(e){return new Promise((t,n)=>{const o=new Blob([e],{type:"application/octet-binary"}),a=new FileReader;a.onload=(e=>{const n=e.target.result;t(n.substr(n.indexOf(",")+1))}),a.readAsDataURL(o)})}async function base64ToArrayBuffer(e){const t=await fetch(`data:application/octect-stream;base64,${e}`);return await t.arrayBuffer()}function parseqs(e=window.location.search){const t={};e="?"==e[0]?e.substring(1):e;const n=(e=decodeURI(e)).split("&");for(let e=0;e<n.length;e++){const o=n[e].split("=");t[o[0]]=decodeURIComponent(o[1])}return t}class FileDecryptor{constructor(e){this.key=(()=>e||window.__newkey__||parseqs().key),this.constants=document.getElementById("constants")||{},this.iv=constants.getAttribute("data-js_iv"),this.filename=constants.getAttribute("data-filename"),this._get_iv_as_buffer=(async e=>{return await base64ToArrayBuffer(e)}),this._get_crypto=(async e=>{const t=await base64ToArrayBuffer(e);return await crypto.subtle.importKey("raw",t,"AES-CBC",!0,["encrypt","decrypt"])}),this.get_data=(async()=>{const e=this.key()||window.__newkey__;if(e){const t=await this._get_crypto(e),n=this.iv;return{key:t,iv:await this._get_iv_as_buffer(n)}}return!1}),this.decrypt=(async(e,t,n="application/octet-stream")=>{const o=e.key,a=e.iv,r=await crypto.subtle.decrypt({name:"AES-CBC",iv:a},o,t);return new Blob([r],{type:n})})}}function enter_input(e){const t=document.getElementById("keyval"),n=document.getElementById("keybtn"),o=document.getElementById("get-key");o.style.display="block",n.addEventListener("click",()=>(window.__newkey__=decodeURIComponent(t.value),o.style.display="none",_decrypt(e)))}async function _decrypt(e){const t=new FileDecryptor,n=e||await use_decryptor(t);try{if(!n)throw Error();const e=n.ret;document.title=`Download ${e.filename}`,document.getElementById("filename-dl").innerHTML=`Downloaded:<span style='background-color:#e3e3e3'>${e.filename}</span>`,document.getElementById("dliprgr").innerHTML="Download Finished";const o=e.type,a=await t.decrypt(n.data,n.enc,o),r=URL.createObjectURL(a);return document.getElementById("download-link").style.display="block",document.getElementById("dl-a").href=r,!0}catch(e){console.log(e),enter_input(n)}}function use_decryptor(e){return new Promise((t,n)=>{e.get_data().then(n=>{if(n){const o=e.filename,a=new XMLHttpRequest;document.getElementById("dl-a").download=o,a.open("GET",`/get~file/?f=${encodeURIComponent(o)}`),a.responseType="arraybuffer",a.onprogress=(e=>{const t=e.total;document.getElementById("progrs").style.display="block",document.getElementById("div_").innerHTML=`${(e.loaded/1048576).toFixed(2)} MB of ${(t/1048576).toFixed(2)} MB`,document.getElementById("progrs").style.width=`${e.loaded/1048576/(t/1048576)*100}%`}),a.onload=(e=>{document.getElementById("div_").innerHTML="Complete",document.getElementById("progrs").style.width="100%";const r=a.response;fetch(`/get~file/?f=${encodeURIComponent(o)}.meta_data.json`).then(e=>e.json()).then(e=>{t({enc:r,data:n,ret:e})})}),a.send()}else t(null)})})}function url_create(e,t){const n=new URLSearchParams(e),o=Object.keys(t);for(k of o)v=t[k],n.set(k,v);return n.toString()}